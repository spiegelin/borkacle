name: Borkacle CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-checks:
    name: Backend Checks (Bot & Controller)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Download Linters/Formatters
        run: |
          mkdir -p bot/tools controller/tools
          wget -q https://github.com/google/google-java-format/releases/download/v1.15.0/google-java-format-1.15.0-all-deps.jar -O bot/tools/formatter.jar
          wget -q https://github.com/google/google-java-format/releases/download/v1.15.0/google-java-format-1.15.0-all-deps.jar -O controller/tools/formatter.jar
          # Assuming sun_checks.xml is needed and present in each service root
          # wget -q https://github.com/checkstyle/checkstyle/releases/download/checkstyle-10.3.3/checkstyle-10.3.3-all.jar -O bot/tools/checkstyle.jar
          # wget -q https://github.com/checkstyle/checkstyle/releases/download/checkstyle-10.3.3/checkstyle-10.3.3-all.jar -O controller/tools/checkstyle.jar

      - name: Check Java Format (Bot)
        continue-on-error: true # Dev phase: Don't fail workflow
        run: |
          cd bot
          find src -name "*.java" -type f | xargs java -jar tools/formatter.jar --dry-run --set-exit-if-changed

      - name: Check Java Format (Controller)
        continue-on-error: true # Dev phase: Don't fail workflow
        run: |
          cd controller
          find src -name "*.java" -type f | xargs java -jar tools/formatter.jar --dry-run --set-exit-if-changed

      # - name: Run Checkstyle (Bot)
      #   continue-on-error: true # Dev phase: Don't fail workflow
      #   run: |
      #     cd bot
      #     # java -jar tools/checkstyle.jar -c sun_checks.xml src/main/java
      #     echo "Checkstyle for bot skipped or passed (non-blocking)"

      # - name: Run Checkstyle (Controller)
      #   continue-on-error: true # Dev phase: Don't fail workflow
      #   run: |
      #     cd controller
      #     # java -jar tools/checkstyle.jar -c sun_checks.xml src/main/java
      #     echo "Checkstyle for controller skipped or passed (non-blocking)"

      - name: Test Bot Service
        continue-on-error: true # Dev phase: Don't fail workflow
        run: cd bot && mvn test

      - name: Test Controller Service
        continue-on-error: true # Dev phase: Don't fail workflow
        run: cd controller && mvn test

      - name: Build Bot Service (Skip Tests)
        run: cd bot && mvn package -DskipTests

      - name: Build Controller Service (Skip Tests)
        run: cd controller && mvn package -DskipTests

      # Docker builds might be better in a separate deployment workflow
      # - name: Build Bot Docker image
      #   run: |
      #     cd bot
      #     docker build -t borkacle-bot:${{ github.sha }} .

      # - name: Build Controller Docker image
      #   run: |
      #     cd controller
      #     docker build -t borkacle-controller:${{ github.sha }} .

  frontend-checks:
    name: Frontend Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Using Node 18 LTS
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json # Correct path

      - name: Install dependencies
        working-directory: ./frontend # Specify working directory
        run: npm ci

      # Dev dependencies should be part of npm ci if they are in package.json
      # - name: Install dev dependencies
      #   working-directory: ./frontend
      #   run: npm install --save-dev prettier @biomejs/biome

      - name: Check formatting (Prettier)
        working-directory: ./frontend
        continue-on-error: true # Dev phase: Don't fail workflow
        run: npx prettier --check .

      - name: Lint (Biome)
        working-directory: ./frontend
        continue-on-error: true # Dev phase: Don't fail workflow
        run: npx biome check .

      - name: Test Frontend
        working-directory: ./frontend
        continue-on-error: true # Dev phase: Don't fail workflow
        run: |
          if grep -q '"test"' package.json; then
            echo "Ejecutando pruebas de frontend..."
            npm test -- --passWithNoTests # Added flag to pass if no tests found
          else
            echo "No se encontr√≥ script 'test' en package.json, saltando pruebas de frontend"
          fi

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build 