version: 0.1
component: build

timeoutInSeconds: 3600

env:
  variables:
    REGISTRY: mx-queretaro-1.ocir.io
    NAMESPACE: axtwc9mqbq4b
    FRONTEND_REPO: borkacle-frontend
    BOT_REPO: borkacle-bot
    CONTROLLER_REPO: borkacle-controller

steps:
  - type: Command
    name: Login to OCIR
    command: |
      echo "ðŸ”‘ Autenticando en OCIR..."
      echo "${DEVOPS_AUTH_TOKEN}" \
        | docker login $REGISTRY \
            -u "${DEVOPS_USERNAME}" \
            --password-stdin

  - type: Command
    name: Load and Bump Version
    command: |
      VERSION_FILE="version.txt"
      if [ -f "$VERSION_FILE" ]; then
        OLD_VERSION=$(cat $VERSION_FILE)
      else
        OLD_VERSION="1.0.0"
      fi
      IFS='.' read -r MAJOR MINOR PATCH <<< "$OLD_VERSION"
      PATCH=$((PATCH + 1))
      VERSION="${MAJOR}.${MINOR}.${PATCH}"
      echo $VERSION > $VERSION_FILE
      echo "VERSION=$VERSION" > build_vars.env
      echo "ðŸ”¢ Nueva versiÃ³n: $VERSION"

  - type: Command
    name: Load Version
    command: |
      source build_vars.env
      echo "VersiÃ³n actual: $VERSION"

  - type: Command
    name: Build & Push Frontend
    command: |
      source build_vars.env
      docker build --pull --no-cache \
        -t ${REGISTRY}/${NAMESPACE}/${FRONTEND_REPO}:${VERSION} \
        ./frontend

      docker push ${REGISTRY}/${NAMESPACE}/${FRONTEND_REPO}:${VERSION}

  - type: Command
    name: Build & Push Bot
    command: |
      source build_vars.env
      docker build --pull --no-cache \
        -t ${REGISTRY}/${NAMESPACE}/${BOT_REPO}:${VERSION} \
        ./bot

      docker push ${REGISTRY}/${NAMESPACE}/${BOT_REPO}:${VERSION}

  - type: Command
    name: Build & Push Controller
    command: |
      source build_vars.env
      docker build --pull --no-cache \
        -t ${REGISTRY}/${NAMESPACE}/${CONTROLLER_REPO}:${VERSION} \
        ./controller

      docker push ${REGISTRY}/${NAMESPACE}/${CONTROLLER_REPO}:${VERSION}

  - type: Command
    name: Render Kubernetes YAMLs
    command: |
      source build_vars.env
      sed "s|\${VERSION}|$VERSION|g" k8s/frontend-deployment.yaml > k8s/frontend-deployment.yaml
      sed "s|\${VERSION}|$VERSION|g" k8s/bot-deployment.yaml > k8s/bot-deployment.yaml
      sed "s|\${VERSION}|$VERSION|g" k8s/controller-deployment.yaml > k8s/controller-deployment.yaml

  - type: Command
    name: Show Image URIs
    command: |
      source build_vars.env
      echo "FRONTEND_IMAGE=${REGISTRY}/${NAMESPACE}/${FRONTEND_REPO}:${VERSION}"
      echo "BOT_IMAGE=${REGISTRY}/${NAMESPACE}/${BOT_REPO}:${VERSION}"
      echo "CONTROLLER_IMAGE=${REGISTRY}/${NAMESPACE}/${CONTROLLER_REPO}:${VERSION}"

outputArtifacts:
  - name: frontend-deployment
    type: BINARY
    location: k8s/frontend-deployment.yaml

  - name: bot-deployment
    type: BINARY
    location: k8s/bot-deployment.yaml

  - name: controller-deployment
    type: BINARY
    location: k8s/controller-deployment.yaml
